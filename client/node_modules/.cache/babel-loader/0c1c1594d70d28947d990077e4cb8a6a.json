{"ast":null,"code":"import _classCallCheck from \"/home/bkonshak/project/nihal_capstone/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bkonshak/project/nihal_capstone/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bkonshak/project/nihal_capstone/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bkonshak/project/nihal_capstone/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bkonshak/project/nihal_capstone/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bkonshak/project/nihal_capstone/client/src/containers/Signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input } from 'semantic-ui-react';\nimport * as actions from '../actions';\nimport semanticFormField from '../components/SemanticForm';\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formProps) {\n      console.log(formProps);\n\n      _this.props.signup(formProps, function () {\n        _this.props.history.push('/feature');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var handleSubmit = this.props.handleSubmit; // handleSubmit provided by redux form\n\n      return React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"style\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"\\n        body > div,\\n        body > div > div,\\n        body > div > div > div.login-form {\\n          height: 100%;\\n        }\\n        .login-form {\\n          padding-top: 5em\\n        }\\n      \"), React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 450\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Register\"), React.createElement(Form, {\n        size: \"large\",\n        onSubmit: handleSubmit(this.onSubmit),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        stacked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"email\",\n        component: semanticFormField,\n        as: Form.Input,\n        icon: \"mail\",\n        iconPosition: \"left\",\n        type: \"text\",\n        placeholder: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"password\",\n        component: semanticFormField,\n        as: Form.Input,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"confirm-password\",\n        component: semanticFormField,\n        as: Form.Input,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, this.props.errorMessage), React.createElement(Button, {\n        color: \"teal\",\n        fluid: true,\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Submit\"))))));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.auth.errorMessage\n  };\n}\n\nexport default compose(connect(mapStateToProps, actions), reduxForm({\n  form: 'signup'\n}))(Signup);","map":{"version":3,"sources":["/home/bkonshak/project/nihal_capstone/client/src/containers/Signup.js"],"names":["React","Component","connect","compose","reduxForm","Field","Button","Form","Grid","Header","Image","Message","Segment","Input","actions","semanticFormField","Signup","onSubmit","formProps","console","log","props","signup","history","push","handleSubmit","height","maxWidth","errorMessage","mapStateToProps","state","auth","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Input } from 'semantic-ui-react';\nimport * as actions from '../actions';\nimport semanticFormField from '../components/SemanticForm';\n\nclass Signup extends Component {\n  onSubmit = (formProps) => {\n    console.log(formProps);\n    this.props.signup(formProps, () => {\n      this.props.history.push('/feature');\n    });\n  };\n   \n  render() {\n\n    const { handleSubmit } = this.props; // handleSubmit provided by redux form\n\n    return (\n    <div className='login-form'>\n      <style>{`\n        body > div,\n        body > div > div,\n        body > div > div > div.login-form {\n          height: 100%;\n        }\n        .login-form {\n          padding-top: 5em\n        }\n      `}</style>\n      <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Register\n          </Header>\n          <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n            <Segment stacked>\n              <Field name=\"email\" component={semanticFormField} as={Form.Input} icon='mail' iconPosition='left' type=\"text\" placeholder=\"Email\" />\n              <Field name=\"password\" component={semanticFormField} as={Form.Input} icon='lock' iconPosition='left' type=\"password\" placeholder=\"Password\" />\n              <Field name=\"confirm-password\" component={semanticFormField} as={Form.Input} icon='lock' iconPosition='left' type=\"password\" placeholder=\"Confirm Password\" />\n              <div>{this.props.errorMessage}</div>\n              <Button color='teal' fluid size='large'>\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )}  \n}\n\nfunction mapStateToProps(state) {\n  return { errorMessage: state.auth.errorMessage };\n}\n\nexport default compose (\n  connect(mapStateToProps, actions),\n  reduxForm({ form: 'signup'})\n)(Signup);\n\n"]},"metadata":{},"sourceType":"module"}