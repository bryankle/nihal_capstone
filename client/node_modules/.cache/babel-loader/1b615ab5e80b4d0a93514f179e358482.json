{"ast":null,"code":"import _objectWithoutProperties from \"/home/bkonshak/project/nihal_capstone/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/bkonshak/project/nihal_capstone/client/src/components/SemanticForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from 'semantic-ui-react';\nexport default function semanticFormField(_ref) {\n  var input = _ref.input,\n      type = _ref.type,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      _ref$meta = _ref.meta,\n      touched = _ref$meta.touched,\n      error = _ref$meta.error,\n      warning = _ref$meta.warning,\n      _ref$as = _ref.as,\n      As = _ref$as === void 0 ? Input : _ref$as,\n      props = _objectWithoutProperties(_ref, [\"input\", \"type\", \"label\", \"placeholder\", \"meta\", \"as\"]);\n\n  function handleChange(e, _ref2) {\n    var value = _ref2.value;\n    return input.onChange(value);\n  }\n\n  return React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(As, Object.assign({}, props, input, {\n    value: input.value,\n    type: type,\n    label: label,\n    placeholder: placeholder,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), touched && (error && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, error)) || warning && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, warning))));\n}\nsemanticFormField.propTypes = {\n  as: PropTypes.any,\n  input: PropTypes.object,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  meta: PropTypes.object\n};","map":{"version":3,"sources":["/home/bkonshak/project/nihal_capstone/client/src/components/SemanticForm.js"],"names":["React","PropTypes","Form","Input","semanticFormField","input","type","label","placeholder","meta","touched","error","warning","as","As","props","handleChange","e","value","onChange","propTypes","any","object","string"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AAEA,eAAe,SAASC,iBAAT,OAA8H;AAAA,MAAhGC,KAAgG,QAAhGA,KAAgG;AAAA,MAAzFC,IAAyF,QAAzFA,IAAyF;AAAA,MAAnFC,KAAmF,QAAnFA,KAAmF;AAAA,MAA5EC,WAA4E,QAA5EA,WAA4E;AAAA,uBAA/DC,IAA+D;AAAA,MAAvDC,OAAuD,aAAvDA,OAAuD;AAAA,MAA9CC,KAA8C,aAA9CA,KAA8C;AAAA,MAAvCC,OAAuC,aAAvCA,OAAuC;AAAA,qBAA5BC,EAA4B;AAAA,MAAxBC,EAAwB,wBAAnBX,KAAmB;AAAA,MAATY,KAAS;;AAC3I,WAASC,YAAT,CAAuBC,CAAvB,SAAqC;AAAA,QAATC,KAAS,SAATA,KAAS;AACnC,WAAOb,KAAK,CAACc,QAAN,CAAeD,KAAf,CAAP;AACD;;AACD,SACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD,oBAAQH,KAAR,EAAmBV,KAAnB;AAA0B,IAAA,KAAK,EAAEA,KAAK,CAACa,KAAvC;AAA8C,IAAA,IAAI,EAAEZ,IAApD;AAA0D,IAAA,KAAK,EAAEC,KAAjE;AAAwE,IAAA,WAAW,EAAEC,WAArF;AAAkG,IAAA,QAAQ,EAAEQ,YAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEGN,OAAO,KAAMC,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAAN,CAAV,IAA2CC,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CAAN,CAA3D,CAFV,CADF;AAMD;AAEDR,iBAAiB,CAACgB,SAAlB,GAA8B;AAC5BP,EAAAA,EAAE,EAAEZ,SAAS,CAACoB,GADc;AAE5BhB,EAAAA,KAAK,EAAEJ,SAAS,CAACqB,MAFW;AAG5BhB,EAAAA,IAAI,EAAEL,SAAS,CAACsB,MAHY;AAI5BhB,EAAAA,KAAK,EAAEN,SAAS,CAACsB,MAJW;AAK5Bf,EAAAA,WAAW,EAAEP,SAAS,CAACsB,MALK;AAM5Bd,EAAAA,IAAI,EAAER,SAAS,CAACqB;AANY,CAA9B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input } from 'semantic-ui-react';\n\nexport default function semanticFormField ({ input, type, label, placeholder, meta: { touched, error, warning }, as: As = Input, ...props }) {\n  function handleChange (e, { value }) {\n    return input.onChange(value);\n  }\n  return (\n    <Form.Field>\n      <As {...props} {...input} value={input.value} type={type} label={label} placeholder={placeholder} onChange={handleChange} />\n      {touched && ((error && <span><i>{error}</i></span>) || (warning && <span><i>{warning}</i></span>))}\n    </Form.Field>\n  );\n}\n\nsemanticFormField.propTypes = {\n  as: PropTypes.any,\n  input: PropTypes.object,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  meta: PropTypes.object\n};"]},"metadata":{},"sourceType":"module"}